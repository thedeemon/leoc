nums = 1..100
map_sum(f, xs) = {
 s = 0
 for x in xs
  s <- (s + f(x))
 end
 s
}
sq(x) = (x * x)
 print((sq(map_sum((x) => x, nums)) - map_sum(sq, nums)))


nums = 1..100
 print(({
  x_3 =    {
    s_4 = 0
    for x in nums
     s_4 <- (s_4 +       x)
    end
    s_4
   }
  (x_3 * x_3)
 } -   {
   s_1 = 0
   for x in nums
    s_1 <- (s_1 +      (x * x))
   end
   s_1
  }))


# nums : range
# s_4 : int
# x : int
# x_3 : int
# s_1 : int
# x : int
var s_4
s_4 <- 0
{
 var x_6
 var x_end6
 x_6 <- 1
 x_end6 <- 101
 while x_6 < x_end6 {
  s_4 <- (s_4 + x_6)
  x_6 <- (x_6 + 1)
 }
}
var x_3
x_3 <- s_4
var s_1
s_1 <- 0
{
 var x_7
 var x_end7
 x_7 <- 1
 x_end7 <- 101
 while x_7 < x_end7 {
  s_1 <- (s_1 + (x_7 * x_7))
  x_7 <- (x_7 + 1)
 }
}
print(((x_3 * x_3) - s_1))


LOAD_DEST_R, 0,
LOAD_SRC1_V, 0,
MOV,
LOAD_DEST_R, 1,
LOAD_SRC1_V, 1,
MOV,
LOAD_DEST_R, 2,
LOAD_SRC1_V, 101,
MOV,
//15, while_8:
LOAD_SRC2_R, 2,
LOAD_SRC1_R, 1,
JMPLE, 23, //then_10
JMP, 39, //endif_10
//23, then_10:
LOAD_SRC2_R, 1,
LOAD_DEST_R, 0,
LOAD_SRC1_R, 0,
ADD,
LOAD_SRC2_V, 1,
LOAD_DEST_R, 1,
LOAD_SRC1_R, 1,
ADD,
JMP, 15, //while_8
//39, endif_10:
//39, endloop_9:
LOAD_DEST_R, 1,
LOAD_SRC1_R, 0,
MOV,
LOAD_DEST_R, 2,
LOAD_SRC1_V, 0,
MOV,
LOAD_DEST_R, 3,
LOAD_SRC1_V, 1,
MOV,
LOAD_DEST_R, 4,
LOAD_SRC1_V, 101,
MOV,
//59, while_11:
LOAD_SRC2_R, 4,
LOAD_SRC1_R, 3,
JMPLE, 67, //then_13
JMP, 90, //endif_13
//67, then_13:
LOAD_SRC2_R, 3,
LOAD_DEST_R, 5,
LOAD_SRC1_R, 3,
MUL,
LOAD_SRC2_R, 5,
LOAD_DEST_R, 2,
LOAD_SRC1_R, 2,
ADD,
LOAD_SRC2_V, 1,
LOAD_DEST_R, 3,
LOAD_SRC1_R, 3,
ADD,
JMP, 59, //while_11
//90, endif_13:
//90, endloop_12:
LOAD_SRC2_R, 1,
LOAD_DEST_R, 3,
LOAD_SRC1_R, 1,
MUL,
LOAD_SRC2_R, 2,
LOAD_DEST_R, 3,
LOAD_SRC1_R, 3,
SUB,
LOAD_SRC1_R, 3,
PRINT,
